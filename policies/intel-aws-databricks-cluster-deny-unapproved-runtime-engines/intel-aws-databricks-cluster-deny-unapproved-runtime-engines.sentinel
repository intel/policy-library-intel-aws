import "tfplan/v2" as tfplan
import "approved"
import "policy_summary"

param valid_actions default [
	["no-op"],
	["create"],
	["update"],
]

doc = {
	"allowed":   ["PHOTON"],
	"category":  "Platform (PaaS)",
	"error":     " is not an allowed runtime engine type.",
	"file_name": "intel-aws-databricks-cluster-deny-unapproved-runtime-engines.sentinel",
	"name":      "dbxoptimizedcluster",
	"md_url":    "https://github.com/intel/terraform-intel-aws-databricks/blob/main/policies.md",
	"parameter": "runtime_engine",
	"provider":  "databricks/databricks",
	"resource":  "databricks_cluster",
	"violation": "The configured databricks cluster should use the runtime engine PHOTON",
}

// Filter resources by type
all_resources = filter tfplan.resource_changes as _, rc {
	rc.type is doc.resource and
		rc.mode is "managed" and
		rc.change.actions in valid_actions
}

// Filter resources that violate a given condition
violators = filter all_resources as _, r {
	r.change.after.runtime_engine not in doc.allowed
}

// Build a summary report
summaryreport = {
	"name": doc.name,
	"violations": map violators as _, violation {
		{
			"name":    violation.name,
			"address": violation.address,
			"type":    violation.type,
			"message": violation.name + doc.error,
		}
	},
}

main = rule {
	policy_summary.summary(summaryreport, doc)
}
